4/9/19 LOOPING
=============================

Sentinel Value....

In computer programming, a sentinel value
(also reffered to as a flag value, tripe value) is a special
value in the context of an algorithm which uses its presence
as a condition of termination, typically in a loop or recursive
algorithm.


While Loop -- RULE: The sentinel variable must always be declared
                    and initialized before the loop starts
                    
    Two types of "while" loops:
    while (sendinel is set to continue) {
        .... code to repeat ....
    }
    
    //re-assign the sentinel again
    

    do - while :: Guaranteed to execute at least once
    
    do {
    
    
        ... code to posibly repeat ...
        
        ... // assign sentinel value
        
    } while (sentinal is set to continue);













3/18/2019 -- Randomness
===========================================
Math.random() 

This method call will generate a double value 

double r = Math.random();
0 <= r < 1

to make a random integer, we multiply, add, subtract, etc.
a integer value to the random number returned.
cast it to an int

example: generate a random integer number between 1 and 10

int x = (int)(Math.random() * 10) + 1;



3/5/2019 -- MODULAR DIVISION
============================================

    %  -- the precent symbol indicates modular division
    
    Modular division gives the remainder when dividing two numbers
    
    
    
    We use this for:
    
        Finding patterns 
        Tell even or odd numbers
        Time calculations
        Money calculations
        Encryption
    
    NOTE: Only works on integers
    
    example:    10 % 3 = 1
                27 % 20 = 7
                25 % 5 = 0
                100 % 2 = 0
                
    Test for eveness:
        mod any number by 2 and if the remainder is zero it's even




01/09/2019 FUNCTIONS / METHODS / SUBROUTINES
============================================

Definition: A function is a set of instructions 
            that execute a specific task. These 
            instructions are called an algorithm!
            
            

Syntax for building a function in java:

<access> <returned data type> <function name> (arguments) {}

Examples:

public String name() {
    // algorithm
}

private int name(String a, String b, double c) {
    // algorithm
    // return 9; 
}

public void name(String message) {
    // algorithm
    // no return because of void
}













11/9/2018
Notes: increment and decrement operators
       looping using a traditional for looping
       
        Operator        Description
        ========        ===========

          ++             adds 1 to the value of in memory

          --            takes 1 away from the value in memory

          += value      add 'value' to the amount in memory
          
          -= value      takes 1 away from the value in memory
          
          *= value      multiplys the value in the memory
          
          /= value      divides the value in memory by 'value'
          
          
          Traditional For Loop
          
          Syntax:
          
          for (starting_varible;  boolean expression;   count_by) {
          
          // code you want to repeat
          
            } 

        Examples:
        
          for (int i = 0; i < 10; i++) {
          
            System.out.println(i + 1);
        
        }






10/16/2018
Notes: if

boolean expression evaluates to true or false

boolean operators           what they mean
=================           ==============

    ==                      is equal to
    
    !=                      is not equal to

    >=                      greater or equal
    
    <=                      less or equal
    
    >                       strictly greater
    
    <                       strictly less

    &&                      AND
    
    ||                      OR
    
syntax for if
    
        if (boolean_expression) {
            \\ code to execute if
            \\ the boolean expression is true
        }
        
        Examples:
        
        if (a != b && a > c) {
            \\ do something
        }
        
        
        if (a > b && b > c || a == 100) {
            \\ do something . . .
        }

Truth tables

    &&         AND
   ================    
    
    T && T      T
    T && F      F
    F && T      F
    F && F      F

    ||          OR
    ================
    T || T      T
    T || F      T
    F || T      T
    F || F      F


9/28/18
Notes: Collecting data from a keyboard

Java uses a Scanner objected to read data into your program

You can have many Scanners open in a single program

You can look up all the prebuilt methods in a Scanner
using the javadocs






9/26/2018
Notes:  Data Types and Identifier Names (variable names)

Data Types built into java (and most computer languages)

    DATA Types          Description
    ==========          =========================
    String              memory to hold characters
    int                 memory to hold intergers up to 2^32
    long                memory to hold intergers up to 2^64
    double              memory to hold decimal numubers
    float               memory to hold precision decimals
    char                memory to hold a single character
    boolean             memory to indicate true or false
    
    
    Identifier --- what you use to name your data types 
    ===================================================
    
    Rules:  You CAN NOT start an indentifier with a number
            You CAN NOT have spaces in an identifier
            
            You can use underscores _ anywhere
            You can use UPPER and lowerr case letters
            
            Typically start with a lowercase letter 
            unless it is a constant
    
    Examples of valid names:
    
        z
        x
        banana
        _donttlookAtMe
        blue_crayon
        us9
        thisIsALongAndDumbVariableNameThatIShouldNotUse
        
    
        
        
        
        
        
        
        
        
        
9/18//2018  
Notes: How to Compile

1. You write your code into a file with a .java extension

2. In a terminial you will type:

    javac filename.java
    
3. If the above was successful, you will test your program

    To test your program, you will type:
    
    
        java filename

